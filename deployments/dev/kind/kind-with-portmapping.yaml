# 
# kind delete cluster --name rwml-34fa
#
# docker network rm rwml-34fa-network
# docker network create --subnet 172.100.0.0/16 rwml-34fa-network
# KIND_EXPERIMENTAL_DOCKER_NETWORK=rwml-34fa-network kind create cluster --config ./kind/kind-with-portmapping.yaml
#
# Show status:
#
# kubectl get nodes --show-labels
# kubectl cluster-info --context kind-rwml-34fa
#
---
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: rwml-34fa
networking:
  podSubnet: "10.100.0.0/16"
nodes:
  - role: control-plane
    image: kindest/node:v1.31.4
    kubeadmConfigPatches:
    - |
      kind: InitConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          node-labels: "ingress-ready=true"

    extraPortMappings:
    # HTTP ingress controller port mappings - enables access to ingress resources via localhost
    - containerPort: 80
      hostPort: 80
      protocol: TCP

    # HTTPS ingress controller port mappings
    - containerPort: 443
      hostPort: 443
      protocol: TCP

    # Kafka bootstrap server - maps the NodePort (31092) used by Kafka's external bootstrap service
    # to localhost:9092, which is the standard Kafka port that client applications expect
    - containerPort: 31092
      hostPort: 9092
      listenAddress: "127.0.0.1"
      protocol: TCP

    # Kafka broker 0 - maps the NodePort (31234) used by broker 0 to the same port on localhost
    # Each broker needs its own dedicated port for external access
    - containerPort: 31234
      hostPort: 31234
      listenAddress: "127.0.0.1"
      protocol: TCP

    # Kafka broker 1 - maps the NodePort (31235) used by broker 1 to the same port on localhost
    - containerPort: 31235
      hostPort: 31235
      listenAddress: "127.0.0.1"

    # Kafka broker 2 - maps the NodePort (31236) used by broker 2 to the same port on localhost
    - containerPort: 31236
      hostPort: 31236
      listenAddress: "127.0.0.1"

    # Structurizr Lite UI - maps the NodePort (30089) to localhost:8089 for accessing the Structurizr UI
    - containerPort: 30089
      hostPort: 8089
      listenAddress: "127.0.0.1"
      protocol: TCP
